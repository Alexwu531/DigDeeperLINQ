(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{209:function(e,t,r){"use strict";r.r(t);var n=r(0),o=Object(n.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),r("ul",[r("li",[e._v("Source Code: "),r("a",{attrs:{href:"https://github.com/dotnet/corefx/blob/master/src/System.Linq/src/System/Linq/Grouping.cs",target:"_blank",rel:"noopener noreferrer"}},[e._v("Grouping.cs"),r("OutboundLink")],1),e._v("、"),r("a",{attrs:{href:"https://github.com/dotnet/corefx/blob/master/src/System.Linq/src/System/Linq/Lookup.cs",target:"_blank",rel:"noopener noreferrer"}},[e._v("Lookup.cs"),r("OutboundLink")],1)])]),e._v(" "),e._m(3),e._v(" "),e._m(4),e._m(5),e._v(" "),e._m(6),e._v(" "),r("p",[e._v("這裡我盡量清楚的表示每個方法的差異:")]),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),e._m(9),e._v(" "),r("p",[e._v("此類別目標如下:")]),e._v(" "),e._m(10),e._v(" "),r("p",[e._v("知道這個類別要做什麼之後，我們先從建構子看起，實作如下:")]),e._v(" "),e._m(11),e._m(12),e._v(" "),e._m(13),e._v(" "),e._m(14),e._m(15),e._v(" "),e._m(16),e._v(" "),e._m(17),e._v(" "),e._m(18),e._m(19),e._v(" "),e._m(20),e._v(" "),e._m(21),e._m(22),e._v(" "),e._m(23),e._v(" "),e._m(24),e._v(" "),e._m(25),e._v(" "),e._m(26),e._m(27),e._v(" "),e._m(28),e._v(" "),e._m(29),e._m(30),e._v(" "),e._m(31),e._m(32),e._v(" "),e._m(33),e._m(34),e._v(" "),e._m(35),e._v(" "),e._m(36),e._v(" "),e._m(37),e._v(" "),e._m(38),e._m(39),e._v(" "),e._m(40),e._v(" "),e._m(41),e._v(" "),e._m(42),e._m(43),e._v(" "),e._m(44),e._m(45),e._v(" "),e._m(46),e._v(" "),e._m(47),e._v(" "),e._m(48),e._m(49),e._v(" "),e._m(50),e._v(" "),e._m(51),e._m(52),e._v(" "),e._m(53),e._v(" "),r("p",[e._v("要結束之前我們來順一下整個GroupBy的流程:")]),e._v(" "),e._m(54),e._v(" "),e._m(55),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/dotnet/corefx",target:"_blank",rel:"noopener noreferrer"}},[e._v("dotnet/corefx"),r("OutboundLink")],1)])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"groupby的原碼探索"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#groupby的原碼探索","aria-hidden":"true"}},[this._v("#")]),this._v(" GroupBy的原碼探索")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("前面一章提到了我們提到了"),t("code",[this._v("GroupBy")]),this._v("的使用方式，LINQ方法提供給我們很多的選擇，讓我們可以在合適的情境下使用這些方法，我們已經會轉動輪子了，現在來看看輪子是怎麼製造出來的吧。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"原始碼分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原始碼分析","aria-hidden":"true"}},[this._v("#")]),this._v(" 原始碼分析")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("GroupBy")]),this._v("總共有"),t("strong",[this._v("8")]),this._v("個公開方法，實作如下面程式碼所示:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("#region GroupedEnumerable<TSource, TKey>\n\npublic static IEnumerable<IGrouping<TKey, TSource>> GroupBy<TSource, TKey>(this IEnumerable<TSource> source, Func<TSource, TKey> keySelector) =>\n    new GroupedEnumerable<TSource, TKey>(source, keySelector, null);\n\npublic static IEnumerable<IGrouping<TKey, TSource>> GroupBy<TSource, TKey>(this IEnumerable<TSource> source, Func<TSource, TKey> keySelector, IEqualityComparer<TKey> comparer) =>\n    new GroupedEnumerable<TSource, TKey>(source, keySelector, comparer);\n\n#endregion GroupedEnumerable<TSource, TKey>\n\n#region GroupedEnumerable<TSource, TKey, TElement>\n\npublic static IEnumerable<IGrouping<TKey, TElement>> GroupBy<TSource, TKey, TElement>(this IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector) =>\n    new GroupedEnumerable<TSource, TKey, TElement>(source, keySelector, elementSelector, null);\n\npublic static IEnumerable<IGrouping<TKey, TElement>> GroupBy<TSource, TKey, TElement>(this IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector, IEqualityComparer<TKey> comparer) =>\n    new GroupedEnumerable<TSource, TKey, TElement>(source, keySelector, elementSelector, comparer);\n\n#endregion GroupedEnumerable<TSource, TKey, TElement>\n\n#region GroupedResultEnumerable<TSource, TKey, TResult>\n\npublic static IEnumerable<TResult> GroupBy<TSource, TKey, TResult>(this IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TKey, IEnumerable<TSource>, TResult> resultSelector) =>\n    new GroupedResultEnumerable<TSource, TKey, TResult>(source, keySelector, resultSelector, null);\n\npublic static IEnumerable<TResult> GroupBy<TSource, TKey, TResult>(this IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TKey, IEnumerable<TSource>, TResult> resultSelector, IEqualityComparer<TKey> comparer) =>\n    new GroupedResultEnumerable<TSource, TKey, TResult>(source, keySelector, resultSelector, comparer);\n\n#endregion GroupedResultEnumerable<TSource, TKey, TResult>\n\n#region GroupedResultEnumerable<TSource, TKey, TElement, TResult>\n\npublic static IEnumerable<TResult> GroupBy<TSource, TKey, TElement, TResult>(this IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector, Func<TKey,IEnumerable<TElement>, TResult> resultSelector) =>\n    new GroupedResultEnumerable<TSource, TKey, TElement, TResult>(source, keySelector, elementSelector, resultSelector, null);\n\npublic static IEnumerable<TResult> GroupBy<TSource, TKey, TElement, TResult>(this IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector, Func<TKey,IEnumerable<TElement>, TResult> resultSelector, IEqualityComparer<TKey> comparer) =>\n    new GroupedResultEnumerable<TSource, TKey, TElement, TResult>(source, keySelector, elementSelector, resultSelector, comparer);\n\n#endregion GroupedResultEnumerable<TSource, TKey, TElement, TResult>\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("我已經有用"),t("code",[this._v("#region")]),this._v("做了一些整理，它們其實只是分別"),t("code",[this._v("new")]),this._v("出四個不同但是相似的類別，列在下面的是它們的名字及建構子的參數:")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[r("code",[e._v("GroupedEnumerable<TSource, TKey>")]),e._v(" "),r("ol",[r("li",[r("code",[e._v("IEnumerable<TSource> source")]),e._v(": 欲做分組的"),r("strong",[e._v("資料來源")])]),e._v(" "),r("li",[r("code",[e._v("Func<TSource, TKey> keySelector")]),e._v(": 分組的"),r("strong",[e._v("鍵值")])]),e._v(" "),r("li",[r("code",[e._v("IEqualityComparer<TKey> comparer")]),e._v(": 比較鍵值是否相同的"),r("strong",[e._v("等值比較器")])])])]),e._v(" "),r("li",[r("code",[e._v("GroupedEnumerable<TSource, TKey, TElement>")]),e._v(" "),r("ol",[r("li",[r("code",[e._v("IEnumerable<TSource> source")]),e._v(": "),r("em",[e._v("欲做分組的資料來源")])]),e._v(" "),r("li",[r("code",[e._v("Func<TSource, TKey> keySelector")]),e._v(": "),r("em",[e._v("分組的鍵值")])]),e._v(" "),r("li",[r("code",[e._v("Func<TSource, TElement> elementSelector")]),e._v(": 每個"),r("strong",[e._v("元素的輸出資料")])]),e._v(" "),r("li",[r("code",[e._v("IEqualityComparer<TKey> comparer")]),e._v(": "),r("em",[e._v("比較鍵值是否相同的等值比較器")])])])]),e._v(" "),r("li",[r("code",[e._v("GroupedResultEnumerable<TSource, TKey, TResult>")]),e._v(" "),r("ol",[r("li",[r("code",[e._v("IEnumerable<TSource> source")]),e._v(": "),r("em",[e._v("欲做分組的資料來源")])]),e._v(" "),r("li",[r("code",[e._v("Func<TSource, TKey> keySelector")]),e._v(": "),r("em",[e._v("分組的鍵值")])]),e._v(" "),r("li",[r("code",[e._v("Func<TKey, IEnumerable<TSource>, TResult> resultSelector")]),e._v(": 每個"),r("strong",[e._v("組別的輸出資料")])]),e._v(" "),r("li",[r("code",[e._v("IEqualityComparer<TKey> comparer")]),e._v(": "),r("em",[e._v("比較鍵值是否相同的等值比較器")])])])]),e._v(" "),r("li",[r("code",[e._v("GroupedResultEnumerable<TSource, TKey, TElement, TResult>")]),e._v(" "),r("ol",[r("li",[r("code",[e._v("IEnumerable<TSource> source")]),e._v(": "),r("em",[e._v("欲做分組的資料來源")])]),e._v(" "),r("li",[r("code",[e._v("Func<TSource, TKey> keySelector")]),e._v(": "),r("em",[e._v("分組的鍵值")])]),e._v(" "),r("li",[r("code",[e._v("Func<TSource, TElement> elementSelector")]),e._v(": 每個"),r("strong",[e._v("元素的輸出給resultSelector的資料")])]),e._v(" "),r("li",[r("code",[e._v("Func<TKey, IEnumerable<TElement>, TResult> resultSelector")]),e._v(": "),r("em",[e._v("每個組別的輸出資料")])]),e._v(" "),r("li",[r("code",[e._v("IEqualityComparer<TKey> comparer")]),e._v(": "),r("em",[e._v("比較鍵值是否相同的等值比較器")])])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("em",[this._v("斜體字")]),this._v("代表上面一組有的參數，")]),this._v(" "),t("li",[t("strong",[this._v("粗體字")]),this._v("表示這個類別多的參數")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("看了這麼多的類別，看的都眼花撩亂了，但是其實它們都是很相似的類別，因此我們就挑一個最複雜的"),t("code",[this._v("GroupedResultEnumerable<TSource, TKey, TElement, TResult>")]),this._v("來看吧。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"groupedresultenumerable-tsource-tkey-telement-tresult"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#groupedresultenumerable-tsource-tkey-telement-tresult","aria-hidden":"true"}},[this._v("#")]),this._v(" GroupedResultEnumerable<TSource, TKey, TElement, TResult>")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("blockquote",[r("p",[e._v("將資料來源("),r("code",[e._v("source")]),e._v(")用比較器("),r("code",[e._v("comparer")]),e._v(")將鍵值("),r("code",[e._v("keySelector")]),e._v(")分組，再將分組的每個元素用"),r("code",[e._v("elementSelector")]),e._v("取得資料丟到"),r("code",[e._v("resultSelector")]),e._v("中輸出結果。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("public GroupedResultEnumerable(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector, Func<TKey, IEnumerable<TElement>, TResult> resultSelector, IEqualityComparer<TKey> comparer)\n{\n    _source = source ?? throw Error.ArgumentNull(nameof(source));\n    _keySelector = keySelector ?? throw Error.ArgumentNull(nameof(keySelector));\n    _elementSelector = elementSelector ?? throw Error.ArgumentNull(nameof(elementSelector));\n    _comparer = comparer;\n    _resultSelector = resultSelector ?? throw Error.ArgumentNull(nameof(resultSelector));\n}\n")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("判斷傳入參數("),r("code",[e._v("source")]),e._v("、"),r("code",[e._v("keySelector")]),e._v("、"),r("code",[e._v("elementSelector")]),e._v("、"),r("code",[e._v("resultSelector")]),e._v(")是否為空，空的話拋出"),r("code",[e._v("ArgumentNull")]),e._v("例外")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("建構子就是單純的檢查參數是否合法，接著我們要來看什麼方法相信大家應該猜到了，沒錯，就是當你看到"),t("code",[this._v("Enumerable")]),this._v("時就會想到的"),t("code",[this._v("GetEnumerator()")]),this._v(":")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("public IEnumerator<TResult> GetEnumerator()\n{\n    Lookup<TKey, TElement> lookup = Lookup<TKey, TElement>.Create(_source, _keySelector, _elementSelector, _comparer);\n    return lookup.ApplyResultSelector(_resultSelector).GetEnumerator();\n}\n")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("在"),r("code",[e._v("GetEnumerator()")]),e._v("中我們可以看到它去"),r("code",[e._v("Create")]),e._v("了一個"),r("code",[e._v("Lookup")]),e._v("的實體，看來得把"),r("code",[e._v("GroupedResultEnumerable")]),e._v("先擺在一邊了，我們先來看看"),r("code",[e._v("Lookup")]),e._v("到底做了什麼吧。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"lookup-tkey-telement"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lookup-tkey-telement","aria-hidden":"true"}},[this._v("#")]),this._v(" Lookup<TKey, TElement>")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("首先來看剛剛"),t("code",[this._v("GroupedResultEnumerable")]),this._v("叫用的"),t("code",[this._v("Create")]),this._v("方法:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("internal static Lookup<TKey, TElement> Create<TSource>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector, IEqualityComparer<TKey> comparer)\n{\n    Debug.Assert(source != null);\n    Debug.Assert(keySelector != null);\n    Debug.Assert(elementSelector != null);\n\n    Lookup<TKey, TElement> lookup = new Lookup<TKey, TElement>(comparer);\n    foreach (TSource item in source)\n    {\n        lookup.GetGrouping(keySelector(item), create: true).Add(elementSelector(item));\n    }\n\n    return lookup;\n}\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("這個"),t("code",[this._v("Create")]),this._v("方法有幾個看點:")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ol",[r("li",[e._v("新建了一個"),r("code",[e._v("Lookup")]),e._v("的實體\n"),r("ul",[r("li",[e._v("如果沒有設定"),r("code",[e._v("comparer")]),e._v("的話，用預設("),r("code",[e._v("Default")]),e._v(")的比較器")]),e._v(" "),r("li",[e._v("新建存放"),r("code",[e._v("Grouping")]),e._v("的陣列，預設大小為"),r("strong",[e._v("7")])])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("private Lookup(IEqualityComparer<TKey> comparer)\n{\n    _comparer = comparer ?? EqualityComparer<TKey>.Default;\n    _groupings = new Grouping<TKey, TElement>[7];\n}\n")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ol",{attrs:{start:"2"}},[r("li",[e._v("對"),r("code",[e._v("source")]),e._v("集合中每一個元素做兩個階段的處理\n"),r("ol",[r("li",[e._v("取得此元素所在的組別")]),e._v(" "),r("li",[e._v("將此元素的資料加到上一階段取得的組別中")])])]),e._v(" "),r("li",[e._v("傳回已分好組的"),r("code",[e._v("lookup")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("上述這幾個步驟最重要的就是第二步了，我們來看一下第二步的兩個階段到底做了什麼，先來看"),t("code",[this._v("GetGrouping")]),this._v("是如何"),t("strong",[this._v("取得此元素所在的組別")]),this._v("的。")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("在看這段程式碼前我們先回想一下"),r("code",[e._v("GroupBy")]),e._v("回傳的是什麼? 是一個"),r("code",[e._v("Grouping")]),e._v("的集合，每個Grouping內有一個鍵值及其對應的元素組合，在"),r("code",[e._v("GetGrouping")]),e._v("中就是要找出目前巡覽到的元素鍵值所在的"),r("code",[e._v("Grouping")]),e._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("知道了"),t("code",[this._v("GetGrouping")]),this._v("目的後，我們來看一下他的定義:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("internal Grouping<TKey, TElement> GetGrouping(TKey key, bool create)\n")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[r("code",[e._v("GetGrouping")]),e._v("這裡我們分兩個部份說，可以看到"),r("code",[e._v("GetGrouping")]),e._v("有兩個參數，第二個參數的"),r("code",[e._v("create")]),e._v("是在"),r("code",[e._v("Lookup<TKey, TElement>.Create()")]),e._v("時才會設為"),r("code",[e._v("true")]),e._v("，這也就是說"),r("code",[e._v("GetGrouping")]),e._v("本身有兩個執行邏輯:")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ol",[r("li",[e._v("兩種執行邏輯都會先取得傳入鍵值的"),r("code",[e._v("HashCode")]),e._v(" "),r("ol",[r("li",[e._v("叫用"),r("code",[e._v("InternalGetHashCode()")]),e._v("取得鍵值"),r("code",[e._v("HashCode")])]),e._v(" "),r("li",[e._v("叫用客製的比較器("),r("code",[e._v("_comparer")]),e._v(")做取得"),r("code",[e._v("HashCode")]),e._v("的處理(如果客製比較器沒有設定是使用"),r("code",[e._v("Default")]),e._v("比較器)")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("private int InternalGetHashCode(TKey key)\n{\n    // Handle comparer implementations that throw when passed null\n    return (key == null) ? 0 : _comparer.GetHashCode(key) & 0x7FFFFFFF; // 1.ii\n}\n...\ninternal Grouping<TKey, TElement> GetGrouping(TKey key, bool create)\n{\n    int hashCode = InternalGetHashCode(key);    // 1.i\n    ...\n}\n")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ol",{attrs:{start:"2"}},[r("li",[r("code",[e._v("create==false")]),e._v(": 取得目前"),r("code",[e._v("_groupings")]),e._v("中相同鍵值的"),r("code",[e._v("grouping")]),e._v("回傳，如果在"),r("code",[e._v("_groupings")]),e._v("中找不到相同鍵值的"),r("code",[e._v("grouping")]),e._v("就回傳"),r("code",[e._v("null")]),e._v(" "),r("ol",[r("li",[e._v("比對是否已有相同鍵值的"),r("code",[e._v("grouping")]),e._v("存在")]),e._v(" "),r("li",[e._v("比對方式: 先比對"),r("code",[e._v("hashCode")]),e._v("，"),r("code",[e._v("hashCode")]),e._v("相同再用"),r("code",[e._v("Equals")]),e._v("比對")]),e._v(" "),r("li",[e._v("有相同鍵值的"),r("code",[e._v("grouping")]),e._v("則回傳此"),r("code",[e._v("grouping")])]),e._v(" "),r("li",[e._v("沒有的話則傳回"),r("code",[e._v("null")])])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("internal Grouping<TKey, TElement> GetGrouping(TKey key, bool create)\n{\n    ...\n    for (Grouping<TKey, TElement> g = _groupings[hashCode % _groupings.Length]; g != null; g = g._hashNext) // 2.i\n    {\n        if (g._hashCode == hashCode && _comparer.Equals(g._key, key))   // 2.ii\n        {\n            // 2.iii\n            return g;\n        }\n    }\n    ...\n    return null;    // 2.iv\n}\n")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ol",{attrs:{start:"3"}},[r("li",[r("code",[e._v("create==true")]),e._v(": 在新增模式下如果第二步沒有找到相應的"),r("code",[e._v("grouping")]),e._v("的話，則新增一個\n"),r("ol",[r("li",[e._v("判斷是否為"),r("strong",[e._v("新增模式")])]),e._v(" "),r("li",[e._v("新增此鍵值的"),r("code",[e._v("Grouping")])]),e._v(" "),r("li",[e._v("加進"),r("code",[e._v("_groupings")]),e._v("中，讓之後的查找找得到")]),e._v(" "),r("li",[e._v("回傳"),r("code",[e._v("grouping")])])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("internal Grouping<TKey, TElement> GetGrouping(TKey key, bool create)\n{\n    ...\n    if (create) // 3.i\n    {\n        if (_count == _groupings.Length)\n        {\n            Resize();\n        }\n\n        int index = hashCode % _groupings.Length;\n        Grouping<TKey, TElement> g = new Grouping<TKey, TElement>();    // 3.ii\n        g._key = key;\n        g._hashCode = hashCode;\n        g._elements = new TElement[1];\n        g._hashNext = _groupings[index];\n        _groupings[index] = g;  // 3.iii\n        if (_lastGrouping == null)\n        {\n            g._next = g;\n        }\n        else\n        {\n            g._next = _lastGrouping._next;\n            _lastGrouping._next = g;\n        }\n\n        _lastGrouping = g;\n        _count++;\n        return g;   // 3.iv\n    }\n    ...\n}\n")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("這裡我們會發現"),r("code",[e._v("index")]),e._v("的取法是"),r("code",[e._v("hashCode % _groupings.Length")]),e._v("，還記得剛剛"),r("code",[e._v("_groupings")]),e._v("的預設大小是"),r("strong",[e._v("7")]),e._v("嗎? 這裡它利用"),r("code",[e._v("hashCode")]),e._v("對陣列長度的餘數來放進對應的位置裡，這樣我就不用"),r("code",[e._v("new")]),e._v("一個很大的陣列來存放各個"),r("code",[e._v("HashCode")]),e._v("的"),r("code",[e._v("Grouping")]),e._v("，也不用說每次都要全部查找才能找到對應的"),r("code",[e._v("Grouping")]),e._v("，是一個解決的好方法。")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("執行完"),r("code",[e._v("GetGrouping()")]),e._v("後我們得到了一個"),r("code",[e._v("Grouping")]),e._v("的物件，這裡面可能已經有元素，因為之前的元素可能跟目前的元素有相同的鍵值，接下來要把目前的元素加到這個"),r("code",[e._v("Grouping")]),e._v("裡面，所以叫用了"),r("code",[e._v("Grouping")]),e._v("的"),r("code",[e._v("Add")]),e._v("方法。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("現在"),t("code",[this._v("Lookup.Create()")]),this._v("的工作完成了，它把每個元素放進了它該待的"),t("code",[this._v("Grouping")]),this._v("中，然後傳回給"),t("code",[this._v("GroupedResultEnumerable")]),this._v("。")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("還記得上面有說"),r("code",[e._v("GroupedResultEnumerable")]),e._v("是四種"),r("code",[e._v("Enumerable")]),e._v("中最複雜的嗎? 其實介紹到這裡，我們已經把另一個叫"),r("code",[e._v("GroupedEnumerable")]),e._v("的類別要做的事給說完了，因為"),r("code",[e._v("GroupedEnumerable")]),e._v("比"),r("code",[e._v("GroupedResultEnumerable")]),e._v("少了"),r("strong",[e._v("彙整組內資料")]),e._v("的處理，所以"),r("code",[e._v("GroupedEnumerable")]),e._v("其實在分完"),r("code",[e._v("Grouping")]),e._v("後就已經完成了，那就在這裡先來看看"),r("code",[e._v("GetEnumerator()")]),e._v("是怎麼處理分組資料的:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("public IEnumerator<IGrouping<TKey, TElement>> GetEnumerator()\n{\n    Grouping<TKey, TElement> g = _lastGrouping;\n    if (g != null)\n    {\n        do\n        {\n            g = g._next;\n            yield return g;\n        }\n        while (g != _lastGrouping);\n    }\n}\n")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("迴圈將串列中的所有"),r("code",[e._v("Grouping")]),e._v("巡覽")]),e._v(" "),r("li",[e._v("每個"),r("code",[e._v("Grouping")]),e._v("都"),r("code",[e._v("yield return")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("這裡很單純地用"),t("code",[this._v("yield")]),this._v("傳回每個"),t("code",[this._v("Grouping")]),this._v("的資料。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("接著我們要講講"),t("code",[this._v("GroupedResultEnumerable")]),t("strong",[this._v("彙整組內資料")]),this._v("的處理:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("public IEnumerator<TResult> GetEnumerator()\n{\n    // 1. 將元素擺到對應鍵值的Grouping中\n    Lookup<TKey, TElement> lookup = Lookup<TKey, TElement>.Create(_source, _keySelector, _elementSelector, _comparer);\n    // 2. 彙整組內資料\n    return lookup.ApplyResultSelector(_resultSelector).GetEnumerator();\n}\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("從上面的程式碼可以看到彙整的處理是在"),t("code",[this._v("ApplyResultSelector")]),this._v("中發生的，我們來看一下"),t("code",[this._v("ApplyResultSelector")]),this._v("裡面做了什麼:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("public IEnumerable<TResult> ApplyResultSelector<TResult>(Func<TKey, IEnumerable<TElement>, TResult> resultSelector)\n{\n    Grouping<TKey, TElement> g = _lastGrouping;\n    if (g != null)\n    {\n        do\n        {\n            g = g._next;\n            g.Trim();\n            yield return resultSelector(g._key, g._elements);\n        }\n        while (g != _lastGrouping);\n    }\n}\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("整個流程跟剛剛講到的"),t("code",[this._v("GetEnumerator()")]),this._v("一樣，只差在回傳的是"),t("code",[this._v("resultSelector")]),this._v("處理過後的資料。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"測試案例賞析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#測試案例賞析","aria-hidden":"true"}},[this._v("#")]),this._v(" 測試案例賞析")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"grouping-ilist-isreadonly"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#grouping-ilist-isreadonly","aria-hidden":"true"}},[this._v("#")]),this._v(" Grouping_IList_IsReadOnly")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("[Fact]\npublic void Grouping_IList_IsReadOnly()\n{\n    IEnumerable<IGrouping<bool, int>> oddsEvens = new int[] { 1, 2, 3, 4 }.GroupBy(i => i % 2 == 0);\n    foreach (IList<int> grouping in oddsEvens)\n    {\n        Assert.True(grouping.IsReadOnly);\n    }\n}\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("前一章我們在說客製比較器的時候有用基偶數的例子，這裡它是直接用"),t("code",[this._v("keySelector")]),this._v("實作。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"allelementssamekey"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#allelementssamekey","aria-hidden":"true"}},[this._v("#")]),this._v(" AllElementsSameKey")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('[Fact]\npublic void AllElementsSameKey()\n{\n    string[] key = { "Tim", "Tim", "Tim", "Tim" };\n    int[] scores = { 60, -10, 40, 100 };\n    var source = key.Zip(scores, (k, e) => new Record { Name = k, Score = e });\n\n    AssertGroupingCorrect(key, source, source.GroupBy(e => e.Name, new AnagramEqualityComparer()), new AnagramEqualityComparer());\n}\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("這裡看到一個神奇的東西: "),t("code",[this._v("Zip")]),this._v("，它可以把兩個集合合併成一個，太酷了!!")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"結語"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#結語","aria-hidden":"true"}},[this._v("#")]),this._v(" 結語")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ol",[r("li",[r("code",[e._v("GroupBy")]),e._v("會去實體化相應的"),r("code",[e._v("Enumerable")])]),e._v(" "),r("li",[r("code",[e._v("Enumerable")]),e._v("會去叫用"),r("code",[e._v("Lookup.Create()")]),e._v("取得分組資料\n"),r("ol",[r("li",[e._v("叫用"),r("code",[e._v("GetGrouping")]),e._v("取得對應鍵值的"),r("code",[e._v("Grouping")])]),e._v(" "),r("li",[e._v("將元素用"),r("code",[e._v("Add")]),e._v("加入"),r("code",[e._v("Grouping")])])])]),e._v(" "),r("li",[r("code",[e._v("GroupedEnumerable")]),e._v("的"),r("code",[e._v("GetEnumerator()")]),e._v("依序叫用各個"),r("code",[e._v("Grouping")])]),e._v(" "),r("li",[r("code",[e._v("GroupedResultEnumerable")]),e._v("會再叫用"),r("code",[e._v("ApplyResultSelector")]),e._v("彙整資料")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"參考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#參考","aria-hidden":"true"}},[this._v("#")]),this._v(" 參考")])}],!1,null,null,null);t.default=o.exports}}]);