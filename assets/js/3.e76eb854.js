(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{185:function(e,t,r){e.exports=r.p+"assets/img/GetEnumerator.6e937847.png"},186:function(e,t,r){e.exports=r.p+"assets/img/Enumerable.8fc971b2.png"},187:function(e,t,r){e.exports=r.p+"assets/img/640px-Iterator_UML_class_diagram.svg.2ccb0307.png"},225:function(e,t,r){"use strict";r.r(t);var n=[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"藏在foreach下的秘密-foreach原理說明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#藏在foreach下的秘密-foreach原理說明","aria-hidden":"true"}},[this._v("#")]),this._v(" 藏在"),t("code",[this._v("foreach")]),this._v("下的秘密: "),t("code",[this._v("foreach")]),this._v("原理說明")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("在開始使用LINQ之後，以前大量使用的"),t("code",[this._v("foreach")]),this._v("已經慢慢的淡出了我的螢光幕前...，我其實一直都沒意識到這一點，直到我在構思這次的文章時，才又想起了這昔日的好戰友，究竟為什麼會因為使用了LINQ而減少了"),t("code",[this._v("foreach")]),this._v("使用的次數呢?讓我們繼續看下去。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"嘗試的第一步"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#嘗試的第一步","aria-hidden":"true"}},[this._v("#")]),this._v(" 嘗試的第一步")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("總而言之我們先寫一個"),t("code",[this._v("foreach")]),this._v("的範例:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('int[] integers = new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9 };\n\nConsole.WriteLine($"Is Array: {integers is Array}"); //Is Array: true\n\nforeach (int integer in integers)\n{\n    Console.Write($"{integer} ");\n} // 1 2 3 4 5 6 7 8 9 \n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("非常簡單的範例，但卻帶出了不簡單的疑問: "),t("strong",[this._v("為什麼foreach知道要怎麼做巡覽?")]),this._v("，可能有人已經發現我有個提示在程式碼裡:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('Console.WriteLine($"Is Array: {integerArray is Array}"); //Is Array: true\n')])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[r("strong",[e._v("因為"),r("code",[e._v("integers")]),e._v("是"),r("code",[e._v("Array")]),e._v("!!")]),e._v("，嗯...這個答案是對也是不對，因為其實有其他非Array的物件也是可以用"),r("code",[e._v("foreach")]),e._v("來做巡覽的，例如我改為下面這樣子:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('String integers = "123456789";\n\nConsole.WriteLine($"Is Array: {integers is Array}"); //Is Array: false\n\nforeach (char integer in integers)\n{\n    Console.Write($"{integer} ");\n} // 1 2 3 4 5 6 7 8 9 \n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("把"),t("code",[this._v("integers")]),this._v("從"),t("code",[this._v("int[]")]),this._v("改為"),t("code",[this._v("String")]),this._v("照樣還是可以做巡覽，這是為什麼呢?")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"從錯誤中學習"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#從錯誤中學習","aria-hidden":"true"}},[this._v("#")]),this._v(" 從錯誤中學習")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("失敗為成功之母")]),this._v("這句話在寫程式時一直在應證，我們總是在"),t("strong",[this._v("Trial and error")]),this._v("中學習，現在我們要再來嘗試這個解決之道了。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("首先要想辦法讓"),t("code",[this._v("foreach")]),this._v("出錯，我們先塞個"),t("code",[this._v("int")]),this._v("給它看看會發生什麼事:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('int integers = 123456789;\n\nforeach (int integer in integers)\t//error\n{\n    Console.Write($"{integer} ");\n}\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:r(185),alt:"Get Enumerator"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("YA!!")]),this._v(" 發生錯誤: "),t("em",[this._v("because 'int' does not contain a public definition for "),t("strong",[this._v("'GetEnumerator'")])]),this._v("，找到關鍵字，原來是沒有定義"),t("code",[this._v("GetEnumerator")]),this._v("，那我們就來加上定義:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("public class IntegerEnum\n{\n\n}\n\npublic class Integers\n{\n    private int _integers;\n\n    public Integers(int integers)\n    {\n        _integers = integers;\n    }\n\n    public IntegerEnum GetEnumerator()\n    {\n        return new IntegerEnum();\n    }\n}\n")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("我們自定義一個"),r("code",[e._v("Integers")]),e._v("，有實作"),r("code",[e._v("GetEnumerator")]),e._v("，"),r("code",[e._v("GetEnumerator")]),e._v("不知道要傳回什麼，就先傳回一個什麼都沒有的"),r("code",[e._v("IntegerEnum")]),e._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("接著把"),t("code",[this._v("integers")]),this._v("的型別改成我們自定義的"),t("code",[this._v("Integers")]),this._v(":")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("//int integers = 123456789;\nIntegers integers = new Integers(123456789);\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:r(186),alt:"Enumerable"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("又發生錯誤了: "),t("em",[t("strong",[this._v("'UserQuery.IntegerEnum'")]),this._v(" of 'UserQuery.Integers.GetEnumerator()' must have a suitable "),t("strong",[this._v("public MoveNext method")]),this._v(" and "),t("strong",[this._v("public Current property")])]),this._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("我們之後再來講解原理，先把"),t("code",[this._v("Integers")]),this._v("完成:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("public class IntegerEnum\n{\n    private int _integers;\n    private int _index;\n    private int _maxDigit;\n    public int Current { get; private set; }\n\n    public IntegerEnum(int integers)\n    {\n        _integers = integers;\n        _index = 0;\n        _maxDigit = (int)Math.Log10(integers);\n    }\n\n    public bool MoveNext()\n    {\n        if (_maxDigit < _index) return false;\n\n        Current = getCurrent();\n        _index++;\n\n        return true;\n    }\n\n    private int getCurrent()\n    {\n        int currentDigit = _maxDigit - _index;\n        int result = (_integers / (int)Math.Pow(10, currentDigit)) % 10;  //Get first digit\n\n        return result;\n    }\n}\n\npublic class Integers\n{\n    private int _integers;\n\n    public Integers(int integers)\n    {\n        _integers = integers;\n    }\n\n    public IntegerEnum GetEnumerator()\n    {\n        return new IntegerEnum(_integers);\n    }\n}\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("這樣一來我們就可以用"),t("code",[this._v("Integer")]),this._v("取得我們想要的資料了。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原理","aria-hidden":"true"}},[this._v("#")]),this._v(" 原理")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"iterator-pattern"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#iterator-pattern","aria-hidden":"true"}},[this._v("#")]),this._v(" Iterator Pattern")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("foreach")]),this._v("的實作是"),t("code",[this._v("Iterator Pattern")]),this._v("，下圖為"),t("strong",[this._v("UML圖")]),this._v(":")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:r(187),alt:"640px-Iterator_UML_class_diagram.svg.png"}})])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[r("strong",[e._v("ConcreteAggregate")]),e._v(": "),r("code",[e._v("Integers")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("Iterator()")]),e._v(": "),r("code",[e._v("GetEnumerator()")])])])]),e._v(" "),r("li",[r("strong",[e._v("ConcreteIterator")]),e._v(": "),r("code",[e._v("IntegerEnum")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("next()")]),e._v(": 傳回下一個元素，在C#中是以"),r("code",[e._v("Current")]),e._v("來抓出目前元素")]),e._v(" "),r("li",[r("strong",[e._v("hasNext()")]),e._v(": 確認是否有下一個元素，在C#中是由"),r("code",[e._v("MoveNext()")]),e._v("做確認")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("在"),t("code",[this._v("Iterator")]),this._v("裡有個跟C#上的實作差異:")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("在"),r("code",[e._v("Ierator Pattern")]),e._v("上是用"),r("code",[e._v("hasNext()")]),e._v("判斷是否有下一個元素，確定有了再Call "),r("code",[e._v("Next()")]),e._v("取得元素並更新"),r("code",[e._v("index")])]),e._v(" "),r("li",[e._v("c#裡是用"),r("code",[e._v("MoveNext()")]),e._v("判斷是否有下一個元素，確定有了之後去更新"),r("code",[e._v("Current")]),e._v("及"),r("code",[e._v("index")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("到這裡應該對"),t("code",[this._v("foreach")]),this._v("的運作上應該有個基本的認識了，但是我又會想問問題了: "),t("strong",[this._v("那UML上方的Aggregate跟Iterator呢?")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"ienumerable-and-ienumerator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ienumerable-and-ienumerator","aria-hidden":"true"}},[this._v("#")]),this._v(" IEnumerable and IEnumerator")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("千呼萬喚始出來，我們整個主題的重點隆重登場，"),t("strong",[this._v("IEnumerable")]),this._v("及"),t("strong",[this._v("IEnumerator")]),this._v("，它們其實就是UML上方的那兩塊:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("strong",[this._v("Aggregate")]),this._v(": IEnumerable(ConcreteAggregate的介面)")]),this._v(" "),t("li",[t("strong",[this._v("Iterator")]),this._v(": IEnumerator(ConcreteIterator的介面)")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("所以我們的"),r("code",[e._v("Integers")]),e._v("其實就是實作了"),r("code",[e._v("IEnumerable")]),e._v("，而"),r("code",[e._v("IntegerEnum")]),e._v("就是實作了"),r("code",[e._v("IEnumerator")]),e._v("，現在我們來把這兩個介面加到剛剛的例子中:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("public class IntegerEnum : IEnumerator\n{\n    ...\n\n    public object Current { get; private set; }\n\n    public bool MoveNext()\n    {\n        if (_maxDigit < _index) return false;\n\n        Current = getCurrent();\n        _index++;\n\n        return true;\n    }\n\n    public void Reset()\n    {\n        _index = 0;\n    }\n\n    ...\n}\n\npublic class Integers : IEnumerable\n{\n    ...\n\n    public IEnumerator GetEnumerator()\n    {\n        return new IntegerEnum(_integers);\n    }\n}\n")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("這也是為什麼"),r("code",[e._v("String")]),e._v("、"),r("code",[e._v("Array")]),e._v("、"),r("code",[e._v("List")]),e._v("...等物件可以被foreach所解譯，因為這些物件都有繼承"),r("code",[e._v("IEnumerable")]),e._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"運作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#運作","aria-hidden":"true"}},[this._v("#")]),this._v(" 運作")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("foreach (V v in x) embedded_statement\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("{\n    E e = ((C)(x)).GetEnumerator();\n    try {\n        while (e.MoveNext()) {\n            V v = (V)(T)e.Current;\n            embedded_statement\n        }\n    }\n    finally {\n        ... // Dispose e\n    }\n}\n")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[r("strong",[e._v("V")]),e._v(": "),r("code",[e._v("int")])]),e._v(" "),r("li",[r("strong",[e._v("v")]),e._v(": "),r("code",[e._v("integer")])]),e._v(" "),r("li",[r("strong",[e._v("x")]),e._v(": "),r("code",[e._v("integers")])]),e._v(" "),r("li",[r("strong",[e._v("embedded_statement")]),e._v(": "),r("code",[e._v('Console.Write($"{integer} ");')])]),e._v(" "),r("li",[r("strong",[e._v("C")]),e._v(": Collection Type: "),r("code",[e._v("Integers")])]),e._v(" "),r("li",[r("strong",[e._v("E")]),e._v(": Enumerator Type: "),r("code",[e._v("IntegerEnum")])]),e._v(" "),r("li",[r("strong",[e._v("T")]),e._v(": element Type: "),r("code",[e._v("Integer")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("從這裡就可以明顯的看出來"),t("code",[this._v("foreach")]),this._v("其實就會被轉譯為"),t("code",[this._v("Iterator Pattern")]),this._v("的場景物件(Client)。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"結語"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#結語","aria-hidden":"true"}},[this._v("#")]),this._v(" 結語")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("終於把謎題解開了，為什麼我們使用了LINQ就會減少使用"),t("code",[this._v("foreach")]),this._v("，就是因為它們都是對"),t("code",[this._v("IEnumerable")]),this._v("做事情，所以本來我們需要用"),t("code",[this._v("foreach")]),this._v("處理資料集時，用LINQ也可以處理，自然而然好用的LINQ就變成我們的主角啦。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"範例程式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#範例程式","aria-hidden":"true"}},[this._v("#")]),this._v(" 範例程式")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"參考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#參考","aria-hidden":"true"}},[this._v("#")]),this._v(" 參考")])}],s=r(0),i=Object(s.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),r("p",[e._v("這個是巡覽一個1~9數字的陣列，然後把這些數字印到終端的範例。")]),e._v(" "),e._m(5),e._v(" "),e._m(6),e._m(7),e._v(" "),e._m(8),e._m(9),e._v(" "),e._m(10),e._v(" "),e._m(11),e._v(" "),e._m(12),e._v(" "),e._m(13),e._m(14),e._v(" "),e._m(15),e._v(" "),e._m(16),e._m(17),e._v(" "),e._m(18),e._v(" "),e._m(19),r("p",[e._v("再來看看會發生什麼事:")]),e._v(" "),e._m(20),e._v(" "),e._m(21),e._v(" "),r("p",[e._v("這回問題是發生在我們自定義的"),r("code",[e._v("IntegerEnum")]),e._v("上，它叫我們實作"),r("code",[e._v("MoveNext")]),e._v("方法跟"),r("code",[e._v("Current")]),e._v("屬性，看到這邊我突然想到了什麼，這不就是"),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Iterator_pattern",target:"_blank",rel:"noopener noreferrer"}},[e._v("Iterator Pattern"),r("OutboundLink")],1),e._v("嗎?")]),e._v(" "),e._m(22),e._v(" "),e._m(23),e._m(24),e._v(" "),e._m(25),e._v(" "),r("p",[e._v("費了一番心力，終於把1-9的數字給印出來了，但是他是怎麼運作的呢?我們現在就來瞧瞧吧。")]),e._v(" "),e._m(26),e._v(" "),e._m(27),e._v(" "),e._m(28),e._v(" "),r("p",[e._v("在範例程式中分別對應:")]),e._v(" "),e._m(29),e._v(" "),e._m(30),e._v(" "),e._m(31),e._v(" "),e._m(32),e._v(" "),e._m(33),e._v(" "),e._m(34),e._v(" "),e._m(35),e._v(" "),e._m(36),e._v(" "),e._m(37),e._m(38),e._v(" "),e._m(39),e._v(" "),r("p",[e._v("依照"),r("a",{attrs:{href:"https://docs.microsoft.com/zh-tw/dotnet/csharp/language-reference/language-specification/statements",target:"_blank",rel:"noopener noreferrer"}},[e._v("C# Spec"),r("OutboundLink")],1),e._v("的foreach statement說明，我們可以知道一段"),r("code",[e._v("foreach")]),e._v("的程式碼會被定義為下面這樣:")]),e._v(" "),e._m(40),r("p",[e._v("它會被擴充為:")]),e._v(" "),e._m(41),r("p",[e._v("跟剛剛的例子對照:")]),e._v(" "),e._m(42),e._v(" "),e._m(43),e._v(" "),e._m(44),e._v(" "),e._m(45),e._v(" "),e._m(46),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/peterhpchen/DigDeeperLINQ/tree/04_foreach/demo/04_foreach",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub"),r("OutboundLink")],1)]),e._v(" "),e._m(47),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://twmht.github.io/blog/posts/design-pattern/iterator.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("twmht-Iterator Pattern"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Iterator_pattern",target:"_blank",rel:"noopener noreferrer"}},[e._v("Wiki-Iterator pattern"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://msdn.microsoft.com/zh-tw/library/system.collections.ienumerable.getenumerator(v=vs.110).aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("MSDN-IEnumerable.GetEnumerator"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://stackoverflow.com/a/398996",target:"_blank",rel:"noopener noreferrer"}},[e._v("StackOverflow-How do foreach loops work in C#?"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://dotblogs.com.tw/hatelove/2012/05/10/introducing-foreach-ienumerable-ienumerator-yield-iterator",target:"_blank",rel:"noopener noreferrer"}},[e._v("In91-[.NET]快快樂樂學LINQ系列前哨戰－IEnumerable, IEnumerator, yield, Iterator"),r("OutboundLink")],1)])])])},n,!1,null,null,null);t.default=i.exports}}]);