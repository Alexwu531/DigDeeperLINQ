(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{223:function(t,e,s){"use strict";s.r(e);var r=s(0),n=Object(r.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("p",[t._v("Lambda在LINQ扮演著十分重要的角色，為了要對每一筆資料做特定的處理，LINQ會使用委派來將外面的方法帶入巡覽的時候執行以得到期望的資料，而為求簡潔，LINQ帶入的委派常常是以Lambda的形式表示。")]),t._v(" "),s("p",[t._v("現在讓我來簡單介紹Lambda吧。")]),t._v(" "),t._m(1),t._v(" "),s("p",[t._v("首先我們來看看委派的方式從以前到現在有哪些寫法，請參考下面的範例:")]),t._v(" "),t._m(2),s("p",[t._v("上面的程式碼帶出以下的重點")]),t._v(" "),s("ul",[t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),s("li",[s("strong",[t._v("匿名函式")]),t._v(": "),s("code",[t._v("delegate (arguments) { statements }")]),t._v(" "),s("ul",[s("li",[t._v("delegate: 匿名函式的的保留字")]),t._v(" "),s("li",[t._v("arguments: 傳入參數的宣告，可以多個參數(以,隔開)")]),t._v(" "),s("li",[t._v("statements: 此函式執行的程式碼片段")]),t._v(" "),s("li",[t._v("這只是簡述，詳細描述可以參考"),s("a",{attrs:{href:"https://docs.microsoft.com/zh-tw/dotnet/csharp/language-reference/language-specification/expressions#anonymous-function-expressions",target:"_blank",rel:"noopener noreferrer"}},[t._v("C# spec"),s("OutboundLink")],1)])])]),t._v(" "),t._m(6)]),t._v(" "),t._m(7),t._v(" "),s("p",[t._v("在上面的範例說明有用文字描述了Lambda的格式規範，現在我們將每一個格式以例子的方式介紹，藉以加深印象。")]),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._m(12),t._v(" "),t._m(13),t._m(14),t._v(" "),t._m(15),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/peterhpchen/DigDeeperLINQ/tree/06_Lambda/demo/06_Lambda",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub"),s("OutboundLink")],1)]),t._v(" "),t._m(27),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://docs.microsoft.com/zh-tw/dotnet/csharp/programming-guide/statements-expressions-operators/lambda-expressions",target:"_blank",rel:"noopener noreferrer"}},[t._v("Microsoft Docs-Lambda 運算式"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://docs.microsoft.com/zh-tw/dotnet/csharp/programming-guide/statements-expressions-operators/anonymous-methods",target:"_blank",rel:"noopener noreferrer"}},[t._v("Microsoft Docs-匿名方法"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://docs.microsoft.com/zh-tw/dotnet/csharp/programming-guide/delegates/delegates-with-named-vs-anonymous-methods",target:"_blank",rel:"noopener noreferrer"}},[t._v("Microsoft Docs-具名方法委派與匿名方法"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://docs.microsoft.com/zh-tw/dotnet/csharp/language-reference/keywords/delegate",target:"_blank",rel:"noopener noreferrer"}},[t._v("Microsoft Docs-delegate"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://msdn.microsoft.com/zh-tw/library/bb549151(v=vs.110).aspx",target:"_blank",rel:"noopener noreferrer"}},[t._v("Microsoft Docs-Func"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://docs.microsoft.com/zh-tw/dotnet/csharp/language-reference/language-specification/expressions#anonymous-function-expressions",target:"_blank",rel:"noopener noreferrer"}},[t._v("C# Spec-expressions#anonymous-function-expressions"),s("OutboundLink")],1)])])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"lambda運算式介紹"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lambda運算式介紹","aria-hidden":"true"}},[this._v("#")]),this._v(" Lambda運算式介紹")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"前世今生"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前世今生","aria-hidden":"true"}},[this._v("#")]),this._v(" 前世今生")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-C# extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('static string nameMethod(string output)\n{\n    return output;\n}\n\nstatic void Main()\n{\n    // Instantiate delegate with named method:\n    consoleWriteLine(nameMethod, "name method");\n\n    // Instantiate delegate with anonymous method:\n    consoleWriteLine(delegate (string output) { return output; }, "anonymous method");\n\n    // Instantiate delegate with lambda expression\n    consoleWriteLine(output => output, "lambda method");\n}\n\n//public delegate TResult Func<in T, out TResult>(T arg);\nprivate static void consoleWriteLine(Func<string, string> stringGetter, stringinput)\n{\n    Console.WriteLine(stringGetter(input));\n}\n')])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("li",[s("code",[t._v("consoleWriteLine")]),t._v("的第一個參數"),s("code",[t._v("Func")]),t._v("的定義寫於上方註解，它其實是一個有"),s("code",[t._v("input")]),t._v("及"),s("code",[t._v("output")]),t._v("的委派")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[this._v("委派的方式有三種"),e("strong",[this._v("具名函式")]),this._v("、"),e("strong",[this._v("匿名函式")]),this._v("、"),e("strong",[this._v("Lambda運算式")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("strong",[this._v("具名函式")]),this._v(": 將已宣告的方法("),e("code",[this._v("nameMethod")]),this._v(")指給委派")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("li",[s("strong",[t._v("Lambda")]),t._v(": "),s("code",[t._v("arguments => expression | block")]),t._v(" "),s("ul",[s("li",[t._v("arguments: 傳入參數的宣告，可以多個參數(以,隔開)。\n"),s("ul",[s("li",[t._v("只有一個參數時可以不用括號，"),s("strong",[t._v("複數個參數都要加上括號")])]),t._v(" "),s("li",[t._v("可以不用明確指定型別")]),t._v(" "),s("li",[t._v("可以明確指定型別，明確指定型別時一定要加上括號")]),t._v(" "),s("li",[t._v("沒有傳入參數時用空括號"),s("code",[t._v("()")]),t._v("表示")])])]),t._v(" "),s("li",[t._v("expression: 運算式，不括大括號"),s("code",[t._v("{}")]),t._v("，只能單行程式碼，代表回傳值")]),t._v(" "),s("li",[t._v("block: "),s("code",[t._v("{ statements }")]),t._v(": 程式碼區塊，"),s("code",[t._v("statement")]),t._v("為此函式執行的程式碼片段")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"lambda語法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lambda語法","aria-hidden":"true"}},[this._v("#")]),this._v(" Lambda語法")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("格式: "),e("code",[this._v("arguments => expression | block")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"arguments"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("code",[this._v("arguments")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("只有一個傳入參數時可以省略小括弧"),e("code",[this._v("()")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-C# extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("//Only one input parameter\nx => x * x  //legal\n(x) => x * x    //legal\n\n//Two or more input parameters\nx, y => x * y   //illegal\n(x, y) => x * y //legal\n\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("可以明確指定型別，明確指定型別時一定要加上括號"),e("code",[this._v("()")]),this._v("，不明確指定型別也可以")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-C# extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("string x => x * x   //illegal\n(string x) => x * x //legal\nx => x * x  //legal\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("沒有傳入參數時以空括號"),e("code",[this._v("()")]),this._v("表示")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-C# extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('() => Console.WriteLine("Hello Lambda")\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"expression"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#expression","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("code",[this._v("expression")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("只有單行程式碼時為"),e("code",[this._v("expression")]),this._v("，可以不用"),e("code",[this._v("{}")]),this._v("包住程式，程式行的最後也不用加"),e("code",[this._v(";")]),this._v("，其程式碼所代表的是回傳值")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-C# extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("x => x * x  //delegate (int x) { return x * x; }\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("使用"),e("code",[this._v("expression")]),this._v("格式的Lambda稱為"),e("strong",[this._v("Lambda運算式")]),this._v("(Lambda Expressions)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"block"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#block","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("code",[this._v("block")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("一般的程式碼區塊，可以多行程式碼，每行最後要加"),e("code",[this._v(";")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-C# extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("x => { return x * x; }\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("使用"),e("code",[this._v("block")]),this._v("格式的Lambda稱為"),e("strong",[this._v("Lambda陳述式")]),this._v("(Lambda Statements)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"結語"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#結語","aria-hidden":"true"}},[this._v("#")]),this._v(" 結語")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("這章我們學到了各種函式，"),s("strong",[t._v("具名函式")]),t._v("、"),s("strong",[t._v("匿名函式")]),t._v("及"),s("strong",[t._v("Lambda")]),t._v("，從寫法上來觀察，一個比一個還要簡潔，需要撰寫的程式碼也越來越少，到了Lambda更是能省的都已經省了的地步，再次地體會到"),s("code",[t._v("懶惰是人類進步的原動力")]),t._v("這樣的概念。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"範例程式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#範例程式","aria-hidden":"true"}},[this._v("#")]),this._v(" 範例程式")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"參考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#參考","aria-hidden":"true"}},[this._v("#")]),this._v(" 參考")])}],!1,null,null,null);e.default=n.exports}}]);