(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{200:function(e,n,t){e.exports=t.p+"assets/img/join.68df198a.png"},209:function(e,n,t){"use strict";t.r(n);var r=[function(){var e=this.$createElement,n=this._self._c||e;return n("h1",{attrs:{id:"join的應用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#join的應用","aria-hidden":"true"}},[this._v("#")]),this._v(" Join的應用")])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("在資料表的設計中我們會將資料分門別類，例如說人的資料是一張表，電話是一張表，然後會有一個ID關聯兩張表，這時我們如果要找某個人有哪些連絡電話，就會使用到"),n("code",[this._v("Join")]),this._v("的語法來合併人及電話的資料，藉此找到此人對應的聯絡電話。")])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[n("strong",[this._v("LINQ")]),this._v("中也有"),n("code",[this._v("Join")]),this._v("這個方法，是要如何使用呢? 讓我們一起來看看吧。")])},function(){var e=this.$createElement,n=this._self._c||e;return n("h2",{attrs:{id:"功能說明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#功能說明","aria-hidden":"true"}},[this._v("#")]),this._v(" 功能說明")])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("設定"),n("code",[this._v("Outer")]),this._v("及"),n("code",[this._v("Inner")]),this._v("兩個資料型別物件，再將兩個型別中對應"),n("strong",[this._v("對方的屬性")]),this._v("訂出來，最後決定輸出的資料結構，取得目標資料。")])},function(){var e=this.$createElement,n=this._self._c||e;return n("h2",{attrs:{id:"方法定義"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方法定義","aria-hidden":"true"}},[this._v("#")]),this._v(" 方法定義")])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[n("code",[this._v("Join")]),this._v("有兩個公開方法如下:")])},function(){var e=this.$createElement,n=this._self._c||e;return n("div",{staticClass:"language-C# extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("public static IEnumerable<TResult> Join<TOuter, TInner, TKey, TResult>(\n    this IEnumerable<TOuter> outer,\n    IEnumerable<TInner> inner,\n    Func<TOuter, TKey> outerKeySelector,\n    Func<TInner, TKey> innerKeySelector,\n    Func<TOuter, TInner, TResult> resultSelector);\n\npublic static IEnumerable<TResult> Join<TOuter, TInner, TKey, TResult>(\n    this IEnumerable<TOuter> outer,\n    IEnumerable<TInner> inner,\n    Func<TOuter, TKey> outerKeySelector,\n    Func<TInner, TKey> innerKeySelector,\n    Func<TOuter, TInner, TResult> resultSelector,\n    IEqualityComparer<TKey> comparer);\n")])])])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ul",[t("li",[t("code",[e._v("outer")]),e._v(": 要收束的資料")]),e._v(" "),t("li",[t("code",[e._v("inner")]),e._v(": 期望"),t("code",[e._v("outer")]),e._v("要有的資料")]),e._v(" "),t("li",[t("code",[e._v("outerKeySelector")]),e._v(": 跟"),t("code",[e._v("inner")]),e._v("有關聯的屬性")]),e._v(" "),t("li",[t("code",[e._v("innerKeySelector")]),e._v(": 跟"),t("code",[e._v("outer")]),e._v("有關聯的屬性")]),e._v(" "),t("li",[t("code",[e._v("resultSelector")]),e._v(": 目標資料")]),e._v(" "),t("li",[t("code",[e._v("comparer")]),e._v(": "),t("code",[e._v("inner")]),e._v("跟"),t("code",[e._v("outer")]),e._v("關聯屬性的"),t("strong",[e._v("等值比較器")])])])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("我們用剛剛提到的"),n("strong",[this._v("人")]),this._v("跟"),n("strong",[this._v("電話")]),this._v("的例子來看，"),n("strong",[this._v("我們要找到某個人的電話")]),this._v("，可以畫成下面的這張圖:")])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[n("img",{attrs:{src:t(200),alt:"join"}})])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("p",[e._v("可以看到因為我們的目標是特定"),t("strong",[e._v("人")]),e._v("的"),t("strong",[e._v("電話")]),e._v("號碼，所以"),t("strong",[e._v("人")]),e._v("是"),t("code",[e._v("inner")]),e._v("，而"),t("strong",[e._v("電話")]),e._v("是"),t("code",[e._v("outer")]),e._v("，但是因為LINQ的"),t("code",[e._v("Join")]),e._v("方法是"),t("strong",[e._v("Inner Join")]),e._v("，如果想要找的人沒有電話資訊，那個人的資料也不會出現，因此圖片的人的圓圈才會畫到外面。")])},function(){var e=this.$createElement,n=this._self._c||e;return n("h2",{attrs:{id:"查詢運算式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查詢運算式","aria-hidden":"true"}},[this._v("#")]),this._v(" 查詢運算式")])},function(){var e=this.$createElement,n=this._self._c||e;return n("div",{staticClass:"language-C# extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("join_clause\n    : 'join' type? identifier 'in' expression 'on' expression 'equals' expression\n    ;\n")])])])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("這個定義看不出個所以然，那我們用"),n("code",[this._v("Northwind")]),this._v("裡的資料來寫個例子:")])},function(){var e=this.$createElement,n=this._self._c||e;return n("blockquote",[n("p",[this._v("找出所有有訂單的客戶聯絡人姓名")])])},function(){var e=this.$createElement,n=this._self._c||e;return n("div",{staticClass:"language-C# extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("from c in Customers\njoin o in Orders on c.CustomerID equals o.CustomerID\nselect c.ContactName\n")])])])},function(){var e=this.$createElement,n=this._self._c||e;return n("div",{staticClass:"language-C# extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("Customers\n   .Join (\n      Orders,\n      c => c.CustomerID,\n      o => o.CustomerID,\n      (c, o) => c.ContactName\n   )\n")])])])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ul",[t("li",[t("code",[e._v("outer")]),e._v(": "),t("code",[e._v("Customers")])]),e._v(" "),t("li",[t("code",[e._v("inner")]),e._v(": "),t("code",[e._v("Orders")])]),e._v(" "),t("li",[t("code",[e._v("outerKeySelector")]),e._v(": "),t("code",[e._v("Customers.CustomerID")])]),e._v(" "),t("li",[t("code",[e._v("innerKeySelector")]),e._v(": "),t("code",[e._v("Orders.CustomerID")])]),e._v(" "),t("li",[t("code",[e._v("resultSelector")]),e._v(": "),t("code",[e._v("Customers.ContactName")])])])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("p",[e._v("有了這個例子就清楚多了，"),t("code",[e._v("from")]),e._v("指定的是"),t("code",[e._v("outer")]),e._v("，而"),t("code",[e._v("join")]),e._v("指定的是"),t("code",[e._v("inner")]),e._v("，後面的"),t("code",[e._v("equals")]),e._v("是"),t("code",[e._v("inner")]),e._v("及"),t("code",[e._v("outer")]),e._v("關聯屬性的設定。")])},function(){var e=this.$createElement,n=this._self._c||e;return n("div",{staticClass:"language-C# extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("from x1 in e1\njoin x2 in e2 on k1 equals k2\nselect v\n")])])])},function(){var e=this.$createElement,n=this._self._c||e;return n("div",{staticClass:"language-C# extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("( e1 ) . Join( e2 , x1 => k1 , x2 => k2 , ( x1 , x2 ) => v )\n")])])])},function(){var e=this.$createElement,n=this._self._c||e;return n("h2",{attrs:{id:"方法範例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方法範例","aria-hidden":"true"}},[this._v("#")]),this._v(" 方法範例")])},function(){var e=this.$createElement,n=this._self._c||e;return n("div",{staticClass:"language-C# extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("class Person\n{\n    public string Name { get; set; }\n}\n\nclass Phone\n{\n    public string PhoneNumber { get; set; }\n    public Person Person { get; set; }\n}\n")])])])},function(){var e=this.$createElement,n=this._self._c||e;return n("div",{staticClass:"language-C# extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v('Person Peter = new Person() { Name = "Peter" };\nPerson Sunny = new Person() { Name = "Sunny" };\nPerson Tim = new Person() { Name = "Tim" };\nPerson May = new Person() { Name = "May" };\n\nPhone num1 = new Phone() { PhoneNumber = "01-5555555", Person = Peter };\nPhone num2 = new Phone() { PhoneNumber = "02-5555555", Person = Sunny };\nPhone num3 = new Phone() { PhoneNumber = "03-5555555", Person = Tim };\nPhone num4 = new Phone() { PhoneNumber = "04-5555555", Person = May };\nPhone num5 = new Phone() { PhoneNumber = "05-5555555", Person = Peter };\n')])])])},function(){var e=this.$createElement,n=this._self._c||e;return n("h3",{attrs:{id:"找出人名跟電話號碼的對應資料"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#找出人名跟電話號碼的對應資料","aria-hidden":"true"}},[this._v("#")]),this._v(" 找出人名跟電話號碼的對應資料")])},function(){var e=this.$createElement,n=this._self._c||e;return n("div",{staticClass:"language-C# extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v('Phone[] phones = new Phone[] { num1, num2, num3, num4, num5 };\nPerson[] persons = new Person[] { Peter, Sunny, Tim, May };\n\nvar results = persons.Join(\n    phones,\n    person => person,\n    phone => phone.Person,\n    (person, phone) => new { name = person.Name, phoneNumber = phone.PhoneNumber });\n\nforeach (var result in results)\n{\n    Console.WriteLine($"{result.name}: {result.phoneNumber}");\n}\n\n/*\n * output:\n *\n * Peter: 01-5555555\n * Peter: 05-5555555\n * Sunny: 02-5555555\n * Tim: 03-5555555\n * May: 04-5555555\n */\n')])])])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("p",[e._v("這裡我們注意到它的順序是依照"),t("code",[e._v("outer")]),e._v("的順序排序的，如果同一個"),t("code",[e._v("outer")]),e._v("有"),t("strong",[e._v("複數")]),e._v("個"),t("code",[e._v("inner")]),e._v("資料，才會依照"),t("code",[e._v("inner")]),e._v("順序排列。")])},function(){var e=this.$createElement,n=this._self._c||e;return n("h3",{attrs:{id:"join是inner-join"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#join是inner-join","aria-hidden":"true"}},[this._v("#")]),this._v(" Join是Inner Join")])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("我們將"),n("code",[this._v("Person")]),this._v("及"),n("code",[this._v("Phone")]),this._v("的資料各拿掉一個，會是互相有對應到的資料才會輸出。")])},function(){var e=this.$createElement,n=this._self._c||e;return n("div",{staticClass:"language-C# extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("Phone[] phones = new Phone[] { num1, num2, num3, num4, num5 };\nPerson[] persons = new Person[] { Peter, Sunny, Tim, May };\n\nIEnumerable<Person> skipPersons = persons.Skip(1);\nvar results = skipPersons.Join(phones,\n                person => person,\n                phone => phone.Person,\n                (person, phone) => new { name = person.Name, phoneNumber = phone.PhoneNumber });\n\n/*\n * output:\n * Sunny: 02-5555555\n * Tim: 03-5555555\n * May: 04-5555555\n */\n\nIEnumerable<Phone> skipPhones = phones.Skip(1);\nvar results = persons.Join(skipPhones,\n                person => person,\n                phone => phone.Person,\n                (person, phone) => new { name = person.Name, phoneNumber = phone.PhoneNumber });\n\n/*\n * output:\n * Peter: 05-5555555\n * Sunny: 02-5555555\n * Tim: 03-5555555\n * May: 04-5555555\n */\n")])])])},function(){var e=this.$createElement,n=this._self._c||e;return n("h3",{attrs:{id:"客製比較器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#客製比較器","aria-hidden":"true"}},[this._v("#")]),this._v(" 客製比較器")])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("現在有一個奇怪的需求: "),n("strong",[this._v("姓名最後一個字母相同的話電話可以共用")]),this._v("。")])},function(){var e=this.$createElement,n=this._self._c||e;return n("div",{staticClass:"language-C# extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("var results = persons.Join(phones,\n                person => person,\n                phone => phone.Person,\n                (person, phone) => new { name = person.Name, phoneNumber = phone.PhoneNumber },\n                new CustomComparer());\n...\nclass CustomComparer : IEqualityComparer<Person>\n{\n    public bool Equals(Person x, Person y)\n    {\n        return x.Name.TakeLast(1).FirstOrDefault() == y.Name.TakeLast(1).FirstOrDefault();\n    }\n    public int GetHashCode(Person obj)\n    {\n        return obj.Name.TakeLast(1).FirstOrDefault().GetHashCode();\n    }\n}\n\n/*\n * output:\n * Peter: 01-5555555\n * Peter: 05-5555555\n * Sunny: 02-5555555\n * Sunny: 04-5555555\n * Tim: 03-5555555\n * May: 02-5555555\n * May: 04-5555555\n */\n")])])])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("我們可以看到"),n("code",[this._v("Sunny")]),this._v("跟"),n("code",[this._v("May")]),this._v("因為最後一個字母都是"),n("code",[this._v("y")]),this._v("，所以他們所對應的電話都有對方的號碼。")])},function(){var e=this.$createElement,n=this._self._c||e;return n("h2",{attrs:{id:"特別之處"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#特別之處","aria-hidden":"true"}},[this._v("#")]),this._v(" 特別之處")])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ul",[t("li",[e._v("是延遲執行的方法")]),e._v(" "),t("li",[e._v("輸出資料的排序會是先"),t("code",[e._v("outer")]),e._v("再"),t("code",[e._v("inner")])]),e._v(" "),t("li",[e._v("沒有傳入客製比較器，則用"),t("code",[e._v("Default")]),e._v("比較器")])])},function(){var e=this.$createElement,n=this._self._c||e;return n("h2",{attrs:{id:"結語"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#結語","aria-hidden":"true"}},[this._v("#")]),this._v(" 結語")])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[n("code",[this._v("Join")]),this._v("因為是Inner Join，所以對於要拿取的資料來說，inner及outer是沒有差別的，但是剛剛提到的排序就會有差別，如果對排序有需求的資料還是要小心使用。")])},function(){var e=this.$createElement,n=this._self._c||e;return n("h2",{attrs:{id:"範例程式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#範例程式","aria-hidden":"true"}},[this._v("#")]),this._v(" 範例程式")])},function(){var e=this.$createElement,n=this._self._c||e;return n("h2",{attrs:{id:"參考"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#參考","aria-hidden":"true"}},[this._v("#")]),this._v(" 參考")])}],s=t(0),i=Object(s.a)({},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),e._m(7),t("p",[e._v("下面依序解說每個參數的意義:")]),e._v(" "),e._m(8),e._v(" "),e._m(9),e._v(" "),e._m(10),e._v(" "),e._m(11),e._v(" "),e._m(12),e._v(" "),t("p",[e._v("依據"),t("a",{attrs:{href:"https://docs.microsoft.com/zh-tw/dotnet/csharp/language-reference/language-specification/expressions#query-expressions",target:"_blank",rel:"noopener noreferrer"}},[e._v("C# Spec"),t("OutboundLink")],1),e._v("，我們可以看到"),t("code",[e._v("join")]),e._v("的定義如下:")]),e._v(" "),e._m(13),e._m(14),e._v(" "),e._m(15),e._v(" "),e._m(16),t("p",[e._v("可以轉為下面的方法寫法:")]),e._v(" "),e._m(17),e._m(18),e._v(" "),e._m(19),e._v(" "),t("p",[e._v("接著我們就可以來看運算式及方法的轉換公式了。")]),e._v(" "),t("p",[e._v("下面是運算式:")]),e._v(" "),e._m(20),t("p",[e._v("可以被轉為:")]),e._v(" "),e._m(21),e._m(22),e._v(" "),t("p",[e._v("範例資料結構如下:")]),e._v(" "),e._m(23),t("p",[e._v("範例資料如下:")]),e._v(" "),e._m(24),t("p",[e._v("下列範例採用上面資料來演繹。")]),e._v(" "),e._m(25),e._v(" "),e._m(26),e._m(27),e._v(" "),e._m(28),e._v(" "),e._m(29),e._v(" "),e._m(30),e._m(31),e._v(" "),e._m(32),e._v(" "),t("p",[e._v("我們試試用客製比較器來完成:")]),e._v(" "),e._m(33),e._m(34),e._v(" "),e._m(35),e._v(" "),e._m(36),e._v(" "),e._m(37),e._v(" "),e._m(38),e._v(" "),e._m(39),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/peterhpchen/DigDeeperLINQ/tree/20_HowToUseJoin/demo/20_HowToUseJoin",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub"),t("OutboundLink")],1)]),e._v(" "),e._m(40),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://docs.microsoft.com/zh-tw/dotnet/csharp/programming-guide/concepts/linq/join-operations",target:"_blank",rel:"noopener noreferrer"}},[e._v("Microsoft Docs-join-operations"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://docs.microsoft.com/zh-tw/dotnet/api/system.linq.enumerable.join?view=netframework-4.7.1",target:"_blank",rel:"noopener noreferrer"}},[e._v("Microsoft Docs-system.linq.enumerable.join"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://docs.microsoft.com/zh-tw/dotnet/csharp/language-reference/language-specification/expressions#query-expressions",target:"_blank",rel:"noopener noreferrer"}},[e._v("Microsoft Docs-language-specification/expressions#query-expressions"),t("OutboundLink")],1)])])])},r,!1,null,null,null);n.default=i.exports}}]);