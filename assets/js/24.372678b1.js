(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{211:function(e,t,r){"use strict";r.r(t);var n=r(0),_=Object(n.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._m(6),e._v(" "),e._m(7),e._m(8),e._v(" "),r("p",[e._v("接著我們來找找"),r("code",[e._v("CreateOrderedEnumerable()")]),e._v("做了什麼事情，在"),r("a",{attrs:{href:"https://github.com/dotnet/corefx/blob/master/src/System.Linq/src/System/Linq/OrderedEnumerable.cs",target:"_blank",rel:"noopener noreferrer"}},[e._v("OrderedEnumerable.cs"),r("OutboundLink")],1),e._v("中找到下面的定義:")]),e._v(" "),e._m(9),e._m(10),e._v(" "),e._m(11),r("p",[e._v("這個建構子有下面這些需注意的點:")]),e._v(" "),e._m(12),e._v(" "),e._m(13),e._v(" "),e._m(14),e._v(" "),e._m(15),e._m(16),e._v(" "),e._m(17),e._v(" "),e._m(18),e._v(" "),e._m(19),e._m(20),e._v(" "),e._m(21),e._m(22),e._v(" "),e._m(23),e._v(" "),e._m(24),e._v(" "),e._m(25),e._m(26),e._v(" "),e._m(27),e._m(28),e._v(" "),e._m(29),e._m(30),e._v(" "),e._m(31),e._v(" "),e._m(32),e._m(33),e._v(" "),e._m(34),e._m(35),e._v(" "),e._m(36),e._v(" "),e._m(37),e._v(" "),e._m(38),e._v(" "),e._m(39),e._m(40),e._v(" "),e._m(41),e._v(" "),e._m(42),e._m(43),e._v(" "),e._m(44),e._v(" "),e._m(45),e._v(" "),e._m(46),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/dotnet/corefx",target:"_blank",rel:"noopener noreferrer"}},[e._v("dotnet/corefx"),r("OutboundLink")],1)])])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"orderby的原碼探索"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#orderby的原碼探索","aria-hidden":"true"}},[this._v("#")]),this._v(" OrderBy的原碼探索")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("前面我們說到LINQ排序方法有四個"),r("code",[e._v("OrderBy")]),e._v("、"),r("code",[e._v("OrderByDescending")]),e._v("、"),r("code",[e._v("ThenBy")]),e._v("及"),r("code",[e._v("ThenByDescending")]),e._v("，\n"),r("code",[e._v("OrderBy")]),e._v("及"),r("code",[e._v("OrderByDescending")]),e._v("是設定"),r("strong",[e._v("第一個")]),e._v("排序條件，而有沒有"),r("code",[e._v("Descending")]),e._v("是差在是不是"),r("strong",[e._v("遞減")]),e._v("排序，LINQ的排序方法都會回傳"),r("code",[e._v("IOrderedEnumerable")]),e._v("型別，只有"),r("code",[e._v("ThenBy")]),e._v("及"),r("code",[e._v("ThenByDescending")]),e._v("接在它們後面才可以下"),r("strong",[e._v("複數個")]),e._v("查詢條件，本章會聚焦在方法的原始碼說明上，讓我們來看看裡面施了什麼魔法吧。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"原始碼分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原始碼分析","aria-hidden":"true"}},[this._v("#")]),this._v(" 原始碼分析")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("Source Code: https://github.com/dotnet/corefx/blob/master/src/System.Linq/src/System/Linq/OrderBy.cs")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[r("code",[e._v("OrderBy")]),e._v("及"),r("code",[e._v("OrderByDescending")]),e._v("都是傳回一個新的"),r("code",[e._v("IOrderedEnumerable")]),e._v("的實作，之間的差別只是在傳入的參數不同，我們以"),r("code",[e._v("OrderBy")]),e._v("講解定義:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("public static IOrderedEnumerable<TSource> OrderBy<TSource, TKey>(\n    this IEnumerable<TSource> source, \n    Func<TSource, TKey> keySelector) \n    => new OrderedEnumerable<TSource, TKey>(source, keySelector, null, false, null);\n")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("回傳的"),r("code",[e._v("OrderedEnumerable")]),e._v("有"),r("strong",[e._v("5")]),e._v("個參數，後面的三個參數就是這幾個方法的不同之處，我們慢一點在去看"),r("code",[e._v("OrderedEnumerable")]),e._v("的建構子，現在我們先再來觀察"),r("code",[e._v("ThenBy")]),e._v("的定義:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("public static IOrderedEnumerable<TSource> ThenBy<TSource, TKey>(\n    this IOrderedEnumerable<TSource> source, \n    Func<TSource, TKey> keySelector)\n{\n    if (source == null)\n    {\n        throw Error.ArgumentNull(nameof(source));\n    }\n\n    return source.CreateOrderedEnumerable(keySelector, null, false);\n}\n")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("由於"),r("code",[e._v("ThenBy")]),e._v("會接在"),r("code",[e._v("OrderBy")]),e._v("後面，使用"),r("code",[e._v("OrderBy")]),e._v("已經建立好的"),r("code",[e._v("OrderedEnumerable")]),e._v("類別叫用"),r("code",[e._v("CreateOrderedEnumerable()")]),e._v("來更新"),r("code",[e._v("OrderedEnumerable")]),e._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("IOrderedEnumerable<TElement> IOrderedEnumerable<TElement>.CreateOrderedEnumerable<TKey>(\n    Func<TElement, TKey> keySelector, \n    IComparer<TKey> comparer, \n    bool descending) \n    => new OrderedEnumerable<TElement, TKey>(_source, keySelector, comparer, @descending, this);\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("咦~這不是就是去新建一個新的"),t("code",[this._v("OrderedEnumerable")]),this._v("嗎? 可是仔細看好像有點不太一樣，我們把目光放在最後一個參數，這裡傳入了"),t("code",[this._v("this")]),this._v("，這裡應該藏了什麼秘密，我們來觀察"),t("code",[this._v("OrderedEnumerable")]),this._v("的建構子吧:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("internal OrderedEnumerable(\n    IEnumerable<TElement> source, \n    Func<TElement, TKey> keySelector, \n    IComparer<TKey> comparer, \n    bool descending, \n    OrderedEnumerable<TElement> parent)\n{\n    _source = source ?? throw Error.ArgumentNull(nameof(source));\n    _parent = parent;\n    _keySelector = keySelector ?? throw Error.ArgumentNull(nameof(keySelector));\n    _comparer = comparer ?? Comparer<TKey>.Default;\n    _descending = descending;\n}\n")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("跟其他方法一樣會去檢查"),r("code",[e._v("source")]),e._v("跟"),r("code",[e._v("keySelector")]),e._v("是否為空，空的話會回傳"),r("code",[e._v("ArgumentNull")]),e._v("的例外")]),e._v(" "),r("li",[e._v("如果沒有設定"),r("code",[e._v("comparer")]),e._v("會使用"),r("code",[e._v("default")]),e._v("的比較器")]),e._v(" "),r("li",[e._v("是否"),r("strong",[e._v("遞減")]),e._v("由參數"),r("code",[e._v("descending")]),e._v("決定")]),e._v(" "),r("li",[e._v("紀錄是誰("),r("code",[e._v("parent")]),e._v(")"),r("code",[e._v("new")]),e._v("了這個"),r("code",[e._v("OrderedEnumerable")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("在這邊我們發現了"),r("code",[e._v("OrderBy")]),e._v("及"),r("code",[e._v("ThenBy")]),e._v("的差別就是"),r("code",[e._v("ThenBy")]),e._v("會傳入"),r("code",[e._v("this")]),e._v("當作"),r("code",[e._v("parent")]),e._v("參數，所以"),r("code",[e._v("ThenBy")]),e._v("的動作會被"),r("strong",[e._v("之前")]),e._v("的"),r("code",[e._v("Source")]),e._v("所影響，這也是為什麼只有"),r("code",[e._v("ThenBy")]),e._v("接續增加查詢條件才會有用的原因。")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("由上面的程式我們可以觀察到"),r("code",[e._v("OrderBy")]),e._v("及"),r("code",[e._v("ThenBy")]),e._v("的差別就是有沒有傳入之前的"),r("code",[e._v("Source")]),e._v("進"),r("code",[e._v("OrderedEnumerable")]),e._v("，先把這點記起來，現在我們來觀察排序的方式，我們前一章有提到"),r("code",[e._v("OrderBy")]),e._v("系列的方法也是延遲執行，代表它排序的時間點是在"),r("code",[e._v("GetEnumerator()")]),e._v("之後，我們先來看"),r("code",[e._v("GetEnumerator()")]),e._v("的定義:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("public IEnumerator<TElement> GetEnumerator()\n{\n    Buffer<TElement> buffer = new Buffer<TElement>(_source);\n    if (buffer._count > 0)\n    {\n        int[] map = SortedMap(buffer);\n        for (int i = 0; i < buffer._count; i++)\n        {\n            yield return buffer._items[map[i]];\n        }\n    }\n}\n")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("將"),r("code",[e._v("_source")]),e._v("轉為"),r("code",[e._v("Buffer")])]),e._v(" "),r("li",[e._v("叫用"),r("code",[e._v("SortedMap()")]),e._v("排序元素")]),e._v(" "),r("li",[e._v("用"),r("code",[e._v("yield")]),e._v("依序回傳元素")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("之前介紹的方法的"),r("code",[e._v("GetEnumerator()")]),e._v("都只是單純的判斷是不是要給一個"),r("strong",[e._v("新的實體")]),e._v("及設定"),r("code",[e._v("_state")]),e._v("，而"),r("code",[e._v("OrderBy")]),e._v("卻在"),r("code",[e._v("GetEnumerator()")]),e._v("時就執行完成了。")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("接下來大家應該都很好奇"),r("code",[e._v("SortedMap()")]),e._v("到底做了什麼吧，在介紹"),r("code",[e._v("SortedMap()")]),e._v("之前得先了解"),r("code",[e._v("Buffer")]),e._v("這個類別，它其實是會將"),r("code",[e._v("_source")]),e._v("轉為"),r("code",[e._v("Array")]),e._v("，它有兩個屬性，一個是陣列型態的"),r("code",[e._v("_items")]),e._v("，另一個是元素總數的"),r("code",[e._v("_count")]),e._v("，下面是參數的代碼片段:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("/// <summary>\n/// The stored items.\n/// </summary>\ninternal readonly TElement[] _items;\n\n/// <summary>\n/// The number of stored items.\n/// </summary>\ninternal readonly int _count;\n")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("接著我們來看"),r("code",[e._v("SortedMap()")]),e._v("，它會回傳"),r("code",[e._v("GetEnumerableSorter().Sort(buffer._items, buffer._count)")]),e._v("，這邊會需要分"),r("code",[e._v("GetEnumerableSorter()")]),e._v("及"),r("code",[e._v("Sort()")]),e._v("來說明，我們依序來看，先看"),r("code",[e._v("GetEnumerableSorter()")]),e._v(":")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("private EnumerableSorter<TElement> GetEnumerableSorter() => GetEnumerableSorter(null);\n...\ninternal override EnumerableSorter<TElement> GetEnumerableSorter(EnumerableSorter<TElement> next)\n{\n    EnumerableSorter<TElement> sorter = new EnumerableSorter<TElement, TKey>(_keySelector, _comparer, _descending, next);\n    if (_parent != null)\n    {\n        sorter = _parent.GetEnumerableSorter(sorter);\n    }\n\n    return sorter;\n}\n")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[r("code",[e._v("GetEnumerableSorter()")]),e._v("會建立一個"),r("code",[e._v("EnumerableSorter")]),e._v("實體，這時如果有使用"),r("code",[e._v("ThenBy()")]),e._v("的話就會有"),r("code",[e._v("_parent")]),e._v("的資料，我們就會將目前的"),r("code",[e._v("Sorter")]),e._v("放在"),r("code",[e._v("_parent")]),e._v("的"),r("code",[e._v("next")]),e._v("，用"),r("code",[e._v("_parent.GetEnumerableSorter(sorter)")]),e._v("取得"),r("code",[e._v("_parent")]),e._v("的"),r("code",[e._v("Sorter")]),e._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("所以"),t("code",[this._v("GetEnumerableSorter()")]),this._v("是在取得實體化每個查詢條件的"),t("code",[this._v("Sorter")]),this._v("，並且將"),t("strong",[this._v("第一個")]),this._v("(祖先)查詢條件回傳。")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("接下來解析"),r("code",[e._v("Sort()")]),e._v("，我們上面提到的"),r("code",[e._v("Buffer")]),e._v("的兩個屬性會傳入"),r("code",[e._v("Sort()")]),e._v("中，來看一下"),r("code",[e._v("Sort()")]),e._v("的定義:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("internal int[] Sort(TElement[] elements, int count)\n{\n    int[] map = ComputeMap(elements, count);\n    QuickSort(map, 0, count - 1);\n    return map;\n}\n")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("從"),r("code",[e._v("Sort()")]),e._v("這裡只能看到叫用了"),r("code",[e._v("ComputeMap()")]),e._v("取得"),r("code",[e._v("map")]),e._v("陣列，再對陣列做"),r("code",[e._v("QuickSort()")]),e._v("，並看不出它真的做了什麼，所以我們得再往內追，先來看"),r("code",[e._v("ComputeMap()")]),e._v(":")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("private int[] ComputeMap(TElement[] elements, int count)\n{\n    ComputeKeys(elements, count);\n    int[] map = new int[count];\n    for (int i = 0; i < map.Length; i++)\n    {\n        map[i] = i;\n    }\n\n    return map;\n}\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("原來"),t("code",[this._v("map")]),this._v("根本就只是初始陣列而已，沒有做任何處理，看來真正做事的是"),t("code",[this._v("ComputeKeys()")]),this._v("，來看一下它吧:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("internal override void ComputeKeys(TElement[] elements, int count)\n{\n    _keys = new TKey[count];\n    for (int i = 0; i < count; i++)\n    {\n        _keys[i] = _keySelector(elements[i]);\n    }\n\n    _next?.ComputeKeys(elements, count);\n}\n")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("終於看到"),r("code",[e._v("Selector")]),e._v("了，這裡是把我們在"),r("code",[e._v("Selector")]),e._v("定的委派方法執行後取得查詢條件，再將條件依目前元素排序放進"),r("code",[e._v("_keys")]),e._v("裡面，後面的查詢條件也會因"),r("code",[e._v("_next?.ComputeKeys(elements, count)")]),e._v("取得它們的"),r("code",[e._v("Key")]),e._v("值。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("這裡雖然取得了查詢條件，但是還沒有做排序，所以我們接著就要來解析在"),t("code",[this._v("Sort()")]),this._v("中的"),t("code",[this._v("QuickSort()")]),this._v(":")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("protected override void QuickSort(int[] keys, int lo, int hi) =>\n            Array.Sort(keys, lo, hi - lo + 1, Comparer<int>.Create(CompareAnyKeys));\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("這裡是叫用"),t("code",[this._v("Array.Sort()")]),this._v("做排序，最重要的是比較器的實作，這就是排序的基準:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("internal override int CompareAnyKeys(int index1, int index2)\n{\n    int c = _comparer.Compare(_keys[index1], _keys[index2]);\n    if (c == 0)\n    {\n        if (_next == null)\n        {\n            return index1 - index2; // ensure stability of sort\n        }\n\n        return _next.CompareAnyKeys(index1, index2);\n    }\n\n    // -c will result in a negative value for int.MinValue (-int.MinValue == int.MinValue).\n    // Flipping keys earlier is more likely to trigger something strange in a comparer,\n    // particularly as it comes to the sort being stable.\n    return (_descending != (c > 0)) ? 1 : -1;\n}\n")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("叫用之前設定的"),r("strong",[e._v("比較器")]),e._v("做排序")]),e._v(" "),r("li",[e._v("如果目前的排序相同的話，檢查是否有下一個排序條件")]),e._v(" "),r("li",[e._v("有的話則往下一個查詢條件叫用，沒有的話則直接傳回兩個"),r("code",[e._v("index")]),e._v("的相減值，由於剛剛"),r("code",[e._v("map")]),e._v("是按照"),r("code",[e._v("index")]),e._v("排序的，所以一定會是負值，代表它依然會按照原本的順序輸出，所以會是"),r("strong",[e._v("stability of sort")])]),e._v(" "),r("li",[e._v("如果有設定"),r("code",[e._v("_descending")]),e._v("，會將"),r("code",[e._v("comparer")]),e._v("的值相反")]),e._v(" "),r("li",[e._v("回傳比較值")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("到這裡就是整個"),r("strong",[e._v("排序")]),e._v("的流程了，可以看到他們將每個步驟都"),r("strong",[e._v("切分")]),e._v("，設定"),r("code",[e._v("Sorter")]),e._v("、取得"),r("code",[e._v("Keys")]),e._v("到"),r("code",[e._v("Comparer")]),e._v("完成排序都切得很乾淨，這樣的程式碼看上去真是賞心悅目，而且又學到了很多的技巧，在理解LINQ的過程中又可以增強程式能力，真是太棒了。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"測試案例賞析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#測試案例賞析","aria-hidden":"true"}},[this._v("#")]),this._v(" 測試案例賞析")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"sourcereverseofresultnullpassedascomparer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sourcereverseofresultnullpassedascomparer","aria-hidden":"true"}},[this._v("#")]),this._v(" SourceReverseOfResultNullPassedAsComparer")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("[Fact]\npublic void SourceReverseOfResultNullPassedAsComparer()\n{\n    int?[] source = { 100, 30, 9, 5, 0, -50, -75, null };\n    int?[] expected = { null, -75, -50, 0, 5, 9, 30, 100 };\n\n    Assert.Equal(expected, source.OrderBy(e => e, null));\n}\n")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[r("code",[e._v("Comparer")]),e._v("傳入"),r("code",[e._v("null")]),e._v("時會使用"),r("code",[e._v("Default")]),e._v("的比較器")]),e._v(" "),r("li",[r("code",[e._v("null")]),e._v("的元素會被排在"),r("strong",[e._v("第一個")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"samekeysverifysortstable"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#samekeysverifysortstable","aria-hidden":"true"}},[this._v("#")]),this._v(" SameKeysVerifySortStable")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('[Fact]\npublic void SameKeysVerifySortStable()\n{\n    var source = new[]\n    {\n        new { Name = "Tim", Score = 90 },\n        new { Name = "Robert", Score = 90 },\n        new { Name = "Prakash", Score = 90 },\n        new { Name = "Jim", Score = 90 },\n        new { Name = "John", Score = 90 },\n        new { Name = "Albert", Score = 90 },\n    };\n    var expected = new[]\n    {\n        new { Name = "Tim", Score = 90 },\n        new { Name = "Robert", Score = 90 },\n        new { Name = "Prakash", Score = 90 },\n        new { Name = "Jim", Score = 90 },\n        new { Name = "John", Score = 90 },\n        new { Name = "Albert", Score = 90 },\n    };\n\n    Assert.Equal(expected, source.OrderBy(e => e.Score));\n}\n')])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("測試排序是否為"),r("code",[e._v("Stable")])]),e._v(" "),r("li",[r("code",[e._v("Stable Sort")]),e._v("的方式在前面的原碼探索有提到，因為是用原本的"),r("code",[e._v("index")]),e._v("去相減，所以可以維持"),r("strong",[e._v("原本的排序")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"結語"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#結語","aria-hidden":"true"}},[this._v("#")]),this._v(" 結語")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("這裡的排序方法跟前面的方法差別比較大，所以在"),t("strong",[this._v("原始碼分析")]),this._v("上花了不少的篇幅，原始碼看得多後面的測試案例看起來就比較平常了，主要都是應證原始碼中分析出來的特性。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"參考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#參考","aria-hidden":"true"}},[this._v("#")]),this._v(" 參考")])}],!1,null,null,null);t.default=_.exports}}]);